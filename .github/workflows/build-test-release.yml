name: Build, Test and Release

on:
  push:
    branches: [main]
    tags: ["v*.*.*"]

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.19]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Vet
        run: go vet ./...

      - name: Test
        run: go test -race -covermode=atomic -coverprofile="c.out" -v ./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./c.out
          fail_ci_if_error: true
  build:
    needs: [test]
    strategy:
      matrix:
        go-version: [1.19]
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
      TARGET_GOOS: ${{ matrix.os }}
      TARGET_GOARCH: ${{ matrix.arch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build
        run: |
          export BUILD_OUTPUT=$(go run scripts/get-artifact.go)
          export COMMIT_HASH=$(git rev-parse HEAD)
          export GOOS="${{ matrix.os }}"
          export GOARCH="${{ matrix.arch }}"
          go build -o $BUILD_OUTPUT \
            -ldflags="-s -w \
            -X github.com/everdrone/grab/internal/config.CommitHash=${COMMIT_HASH} \
            -X github.com/everdrone/grab/internal/config.BuildOS=${GOOS} \
            -X github.com/everdrone/grab/internal/config.BuildArch=${GOARCH}"
          echo "${BUILD_OUTPUT}"

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          draft: true
          files: grab-*
